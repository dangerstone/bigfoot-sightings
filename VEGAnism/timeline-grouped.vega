{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "height": 600,
    "width": 720,
    "padding": 5,

    "title": {
      "text": "Bigfoot Sightings in North America",
      "encode": {
        "title": {
          "enter": {
            "fill": {"value": "green"},
            "fontSize": {"value": 25}
          }
        }
      }
    },
    "data": [
    ],
    "signals": [
      {"name": "map-height", "value": 400},
      {"name": "map-width", "value": 700},
      {"name": "timeline_height", "value": 100},
      {"name": "timeline_width", "value": 700}
    ],
    "scales": [
    ],

"marks": [
    {
      "type": "group",
      "name": "timeline-graph",
      "style": "cell",
      "align": "left",
      "encode": {
        "update": {
          "x": {"value": 1},
          "y": {"value": 1}, 
          "width": {"signal": "timeline_width"},
          "height": {"signal": "timeline_height"}
        }
      },
      "title": {
        "text": "Timeline of sightings",
        "frame": "group"
      },

        "data": [
          {"name": "brush_store"},
          {
            "name": "source_0",
            "url": "https://raw.githubusercontent.com/dangerstone/bigfoot-sightings/data-wrangling/data/bfro_reports_geocoded.csv",
            "format": {"type": "csv", "parse": {"date": "date"}, "delimiter": ","},
            "transform": [
              {
                "type": "filter",
                "expr": "datum.date >= 0"
              },
              {
                "field": "date",
                "type": "timeunit",
                "units": ["year"],
                "as": ["year_date", "year_date_end"]
              }
            ]
          },
          {
            "name": "data_0",
            "source": "source_0",
            "transform": [
              {
                "type": "filter",
                "expr": "!length(data(\"brush_store\")) || vlSelectionTest(\"brush_store\", datum)"
              },
              {
                "type": "aggregate",
                "groupby": ["year_date"],
                "ops": ["count"],
                "fields": [null],
                "as": ["__count"]
              }
            ]
          },
          {
            "name": "data_1",
            "source": "source_0",
            "transform": [
              {
                "type": "aggregate",
                "groupby": ["year_date"],
                "ops": ["count"],
                "fields": [null],
                "as": ["__count"]
              }
            ]
          }
        ],
        "signals": [
          {
            "name": "unit",
            "value": {},
            "on": [
              {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
            ]
          },
          {
            "name": "brush",
            "update": "vlSelectionResolve(\"brush_store\", \"union\")"
          },
          {
            "name": "brush_x",
            "value": [],
            "on": [
              {
                "events": {
                  "source": "scope",
                  "type": "mousedown",
                  "filter": [
                    "!event.item || event.item.mark.name !== \"brush_brush\""
                  ]
                },
                "update": "[x(unit), x(unit)]"
              },
              {
                "events": {
                  "source": "window",
                  "type": "mousemove",
                  "consume": true,
                  "between": [
                    {
                      "source": "scope",
                      "type": "mousedown",
                      "filter": [
                        "!event.item || event.item.mark.name !== \"brush_brush\""
                      ]
                    },
                    {"source": "window", "type": "mouseup"}
                  ]
                },
                "update": "[brush_x[0], clamp(x(unit), 0, width)]"
              },
              {
                "events": {"signal": "brush_scale_trigger"},
                "update": "[scale(\"x\", brush_year_date[0]), scale(\"x\", brush_year_date[1])]"
              },
              {
                "events": [{"source": "view", "type": "dblclick"}],
                "update": "[0, 0]"
              },
              {
                "events": {"signal": "brush_translate_delta"},
                "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, timeline_width)"
              },
              {
                "events": {"signal": "brush_zoom_delta"},
                "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, timeline_width)"
              }
            ]
          },
          {
            "name": "brush_year_date",
            "on": [
              {
                "events": {"signal": "brush_x"},
                "update": "brush_x[0] === brush_x[1] ? null : invert(\"x\", brush_x)"
              }
            ]
          },
          {
            "name": "brush_scale_trigger",
            "value": {},
            "on": [
              {
                "events": [{"scale": "x"}],
                "update": "(!isArray(brush_year_date) || (+invert(\"x\", brush_x)[0] === +brush_year_date[0] && +invert(\"x\", brush_x)[1] === +brush_year_date[1])) ? brush_scale_trigger : {}"
              }
            ]
          },
          {
            "name": "brush_tuple",
            "on": [
              {
                "events": [{"signal": "brush_year_date"}],
                "update": "brush_year_date ? {unit: \"layer_0\", fields: brush_tuple_fields, values: [brush_year_date]} : null"
              }
            ]
          },
          {
            "name": "brush_tuple_fields",
            "value": [{"field": "year_date", "channel": "x", "type": "R"}]
          },
          {
            "name": "brush_translate_anchor",
            "value": {},
            "on": [
              {
                "events": [
                  {"source": "scope", "type": "mousedown", "markname": "brush_brush"}
                ],
                "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
              }
            ]
          },
          {
            "name": "brush_translate_delta",
            "value": {},
            "on": [
              {
                "events": [
                  {
                    "source": "window",
                    "type": "mousemove",
                    "consume": true,
                    "between": [
                      {
                        "source": "scope",
                        "type": "mousedown",
                        "markname": "brush_brush"
                      },
                      {"source": "window", "type": "mouseup"}
                    ]
                  }
                ],
                "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
              }
            ]
          },
          {
            "name": "brush_zoom_anchor",
            "on": [
              {
                "events": [
                  {
                    "source": "scope",
                    "type": "wheel",
                    "consume": true,
                    "markname": "brush_brush"
                  }
                ],
                "update": "{x: x(unit), y: y(unit)}"
              }
            ]
          },
          {
            "name": "brush_zoom_delta",
            "on": [
              {
                "events": [
                  {
                    "source": "scope",
                    "type": "wheel",
                    "consume": true,
                    "markname": "brush_brush"
                  }
                ],
                "force": true,
                "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
              }
            ]
          },
          {
            "name": "brush_modify",
            "on": [
              {
                "events": {"signal": "brush_tuple"},
                "update": "modify(\"brush_store\", brush_tuple, true)"
              }
            ]
          }
        ],
        "marks": [
          {
            "name": "brush_brush_bg",
            "type": "rect",
            "clip": true,
            "encode": {
              "enter": {"fill": {"value": "#333"}, "fillOpacity": {"value": 0.125}},
              "update": {
                "x": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "signal": "brush_x[0]"
                  },
                  {"value": 0}
                ],
                "y": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "value": 0
                  },
                  {"value": 0}
                ],
                "x2": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "signal": "brush_x[1]"
                  },
                  {"value": 0}
                ],
                "y2": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "field": {"group": "timeline_height"}
                  },
                  {"value": 0}
                ]
              }
            }
          },
          {
            "name": "layer_0_marks",
            "type": "area",
            "style": ["area"],
            "sort": {"field": "datum[\"year_date\"]"},
            "interactive": true,
            "from": {"data": "data_1"},
            "encode": {
              "update": {
                "tooltip": {
                  "signal": "{'Year': timeFormat(datum.year_date, '%Y'), 'sightings': datum.__count}"
                },
                "orient": {"value": "vertical"},
                "fill": {"value": "#4c78a8"},
                "description": {
                  "signal": "\"date (year): \" + (timeFormat(datum[\"year_date\"], timeUnitSpecifier([\"year\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"}))) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
                },
                "x": {"scale": "x", "field": "year_date"},
                "y": {"scale": "y", "field": "__count"},
                "y2": {"scale": "y", "value": 0},
                "defined": {
                  "signal": "isValid(datum[\"year_date\"]) && isFinite(+datum[\"year_date\"]) && isValid(datum[\"__count\"]) && isFinite(+datum[\"__count\"])"
                }
              }
            }
          },
          {
            "name": "layer_1_marks",
            "type": "area",
            "style": ["area"],
            "sort": {"field": "datum[\"year_date\"]"},
            "interactive": false,
            "from": {"data": "data_0"},
            "encode": {
              "update": {
                "orient": {"value": "vertical"},
                "fill": {"value": "goldenrod"},
                "description": {
                  "signal": "\"date (year): \" + (timeFormat(datum[\"year_date\"], timeUnitSpecifier([\"year\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"}))) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
                },
                "x": {"scale": "x", "field": "year_date"},
                "y": {"scale": "y", "field": "__count"},
                "y2": {"scale": "y", "value": 0},
                "defined": {
                  "signal": "isValid(datum[\"year_date\"]) && isFinite(+datum[\"year_date\"]) && isValid(datum[\"__count\"]) && isFinite(+datum[\"__count\"])"
                }
              }
            }
          },
          {
            "name": "brush_brush",
            "type": "rect",
            "clip": true,
            "encode": {
              "enter": {"fill": {"value": "#333"}, "fillOpacity": {"value": 0.1}},
              "update": {
                "x": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "signal": "brush_x[0]"
                  },
                  {"value": 0}
                ],
                "y": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "value": 0
                  },
                  {"value": 0}
                ],
                "x2": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "signal": "brush_x[1]"
                  },
                  {"value": 0}
                ],
                "y2": [
                  {
                    "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                    "field": {"group": "height"}
                  },
                  {"value": 0}
                ],
                "stroke": [
                  {"test": "brush_x[0] !== brush_x[1]", "value": "red"},
                  {"value": null}
                ]
              }
            }
          }
        ],
        "scales": [
          {
            "name": "x",
            "type": "time",
            "domain": {
              "fields": [
                {"data": "data_1", "field": "year_date"},
                {"data": "data_0", "field": "year_date"}
              ]
            },
            "range": [0, {"signal": "timeline_width"}]
          },
          {
            "name": "y",
            "type": "linear",
            "domain": [0, 300],
            "range": [{"signal": "timeline_height"}, 0],
            "zero": true
          }
        ],
        "axes": [
          {
            "scale": "x",
            "orient": "bottom",
            "gridScale": "y",
            "grid": true,
            "tickCount": {"signal": "ceil(timeline_width/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "y",
            "orient": "left",
            "gridScale": "x",
            "grid": true,
            "tickCount": {"signal": "ceil(timeline_height/40)"},
            "domain": false,
            "labels": false,
            "aria": false,
            "maxExtent": 0,
            "minExtent": 0,
            "ticks": false,
            "zindex": 0
          },
          {
            "scale": "x",
            "orient": "bottom",
            "grid": false,
            "title": "date (year)",
            "format": {
              "signal": "timeUnitSpecifier([\"year\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"})"
            },
            "labelFlush": true,
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(timeline_width/40)"},
            "zindex": 0
          },
          {
            "scale": "y",
            "orient": "left",
            "grid": false,
            "title": "Count of Records",
            "labelOverlap": true,
            "tickCount": {"signal": "ceil(timeline_height/40)"},
            "zindex": 0
          }
        ]
    }
]
}