{
    "$schema": "https://vega.github.io/schema/vega/v5.json",
    "height": 500,
    "width": 700,
    "padding": 5,

    "title": {
      "text": "Bigfoot Sightings in North America",
      "encode": {
        "title": {
          "enter": {
            "fill": {"value": "darkgreen"},
            "fontSize": {"value": 25}
          }
        }
      }
    },
    "data": [
    ],
    "signals": [
      {"name": "map_height", "value": 400},
      {"name": "map_width", "value": 700},
      {"name": "map_scale", "value": 800},
      {"name": "timeline_height", "value": 100},
      {"name": "timeline_width", "value": 700},
      {"name": "monthly_height", "value": 225},
      {"name": "monthly_width", "value": 300}
    ],
    "scales": [
    ],

    "marks": [
      {
        "type": "group",
        "name": "map-graph",
        "style": "cell",
        "align": "left",
        "encode": {
          "update": {
            "x": {"value": 1},
            "y": {"value": 1}, 
            "width": {"signal": "map_width"},
            "height": {"signal": "map_height"}
          }
        },
        "title": {
          "text": "Map of sightings",
          "frame": "group"
        },
        "data": [
          {
              "name": "states",
              "url": "https://vega.github.io/editor/data/us-10m.json",
              "format": {"type": "topojson", "feature": "states"},
              "transform": [
                  {
                    "type": "geopath",
                    "projection": "projection"
                  }
                ]
          },
          {
              "name": "state-labels",
              "url": "https://raw.githubusercontent.com/dangerstone/bigfoot-sightings/vega-map/data/misc/state-labels.csv",
              "format": {"type": "csv", "parse": {"id": "number","stub": "string","state": "string","code": "number"}}
          },
          {
              "name": "sightings",
              "url": "https://raw.githubusercontent.com/dangerstone/bigfoot-sightings/data-wrangling/data/bfro_reports_geocoded.csv",
              "format": {"type": "csv", "parse": {"observed": "string", "location_details": "string", "county": "string", "state": "string", "season": "string", "title": "string", "latitude": "number", "longitude": "number", "date": "date", "number": "number", "classification": "string"}},
              "transform": [
                  {
                    "type": "geopoint",
                    "projection": "projection",
                    "fields": ["longitude", "latitude"]
                  },
                  {
                    "type": "filter",
                    "expr": "datum.x != null && datum.y != null"
                  }
                ]
          }, 
          {
            "name": "spots",
            "source": ["sightings", "states"],
            "transform": [
              {
              "type": "aggregate", 
                      "groupby": ["state"],
                      "fields": ["number"], "ops": ["count"], "as": ["spots"]
              },
              { "type": "lookup", "from": "state-labels", "key": "state", "fields": ["state"], "values": ["id"]}, 
              { "type": "filter", "expr": "datum.state != null" }
            ]
          },
          {
            "name": "state-sightings",
            "url": "https://vega.github.io/editor/data/us-10m.json",
            "format": {"type": "topojson", "feature": "states"},
            "transform": [
              { "type": "lookup", "from": "spots", "key": "id", "fields": ["id"], "values": ["spots"], "default": 0}
            ]
          }
        ],
        "scales": [
        {
        "name": "color",
        "type": "ordinal",
        "domain": {"data": "sightings", "field": "classification"},
        "range": {"scheme": "teals"},
        "reverse": true
        },
        {
        "name": "sightings",
        "type": "quantize",
        "domain": [0, 500],
        "range": {"scheme": "greens", "count": 100}
        }
        ],
        "projections": [
            {
                "name": "projection",
                "type": "albersUsa",
                "scale": {"signal": "map_scale"},
                "translate": [{"signal": "map_width / 2"}, {"signal": "map_height / 2"}]
            }
        ],
        "marks": [
            {
                "type": "path",
                "from": {"data": "states"},
                "encode": {
                "enter": {
                    "fill": {"value": "#dedede"},
                    "stroke": {"value": "#dedede"}
                },
                "update": {
                    "path": {"field": "path"},
                    "fill": {"value": "white"}
                },
                "hover": { "fill": {"value": "hotpink"} }
                }
            },
            {
            "type": "shape",
            "from": {"data": "state-sightings"},
            "encode": {
                "enter": { "tooltip": {"signal": "datum.spots"}},
                "update": { 
                "fill": {"scale": "sightings", "field": "spots"}, 
                "stroke": {"value": "grey"},
                "strokeWidth": {"value": 0.25} 
                },
                "hover": { "fill": {"value": "hotpink"} }
            },
            "transform": [
                { "type": "geoshape", "projection": "projection" }
            ]
            },
            {
            "type": "symbol",
            "from": {"data": "sightings"},
            "encode": {
                "enter": {
                "size": {"value": 16},
                "fill": {"scale": "color", "field": "classification"},
                "fillOpacity": {"value": 0.5},
                "strokeWidth": {"value": 1}, 
                "tooltip": {
                    "signal": "{'title': datum.title, 'Classification': datum.classification, 'Season': datum.season, 'County': datum.county}"
                    }
                },
                "update": {
                "x": {"field": "x"},
                "y": {"field": "y"}
                }, 
                "hover": {
        
                }
            }
            }    
        ]
      },
      {
        "type": "group",
        "name": "timeline-graph",
        "style": "cell",
        "align": "left",
        "encode": {
          "update": {
            "x": {"value": 1},
            "y": {"value": 450}, 
            "width": {"signal": "timeline_width"},
            "height": {"signal": "timeline_height"}
          }
        },
        "title": {
          "text": "Timeline of sightings",
          "frame": "group"
        },

          "data": [
            {"name": "brush_store"},
            {
              "name": "source_0",
              "url": "https://raw.githubusercontent.com/dangerstone/bigfoot-sightings/data-wrangling/data/bfro_reports_geocoded.csv",
              "format": {"type": "csv", "parse": {"date": "date"}, "delimiter": ","},
              "transform": [
                {
                  "type": "filter",
                  "expr": "datum.date >= 0"
                },
                {
                  "field": "date",
                  "type": "timeunit",
                  "units": ["year"],
                  "as": ["year_date", "year_date_end"]
                }
              ]
            },
            {
              "name": "data_0",
              "source": "source_0",
              "transform": [
                {
                  "type": "filter",
                  "expr": "!length(data(\"brush_store\")) || vlSelectionTest(\"brush_store\", datum)"
                },
                {
                  "type": "aggregate",
                  "groupby": ["year_date"],
                  "ops": ["count"],
                  "fields": [null],
                  "as": ["__count"]
                }
              ]
            },
            {
              "name": "data_1",
              "source": "source_0",
              "transform": [
                {
                  "type": "aggregate",
                  "groupby": ["year_date"],
                  "ops": ["count"],
                  "fields": [null],
                  "as": ["__count"]
                }
              ]
            }
          ],
          "signals": [
            {
              "name": "unit",
              "value": {},
              "on": [
                {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
              ]
            },
            {
              "name": "brush",
              "update": "vlSelectionResolve(\"brush_store\", \"union\")"
            },
            {
              "name": "brush_x",
              "value": [],
              "on": [
                {
                  "events": {
                    "source": "scope",
                    "type": "mousedown",
                    "filter": [
                      "!event.item || event.item.mark.name !== \"brush_brush\""
                    ]
                  },
                  "update": "[x(unit), x(unit)]"
                },
                {
                  "events": {
                    "source": "window",
                    "type": "mousemove",
                    "consume": true,
                    "between": [
                      {
                        "source": "scope",
                        "type": "mousedown",
                        "filter": [
                          "!event.item || event.item.mark.name !== \"brush_brush\""
                        ]
                      },
                      {"source": "window", "type": "mouseup"}
                    ]
                  },
                  "update": "[brush_x[0], clamp(x(unit), 0, width)]"
                },
                {
                  "events": {"signal": "brush_scale_trigger"},
                  "update": "[scale(\"x\", brush_year_date[0]), scale(\"x\", brush_year_date[1])]"
                },
                {
                  "events": [{"source": "view", "type": "dblclick"}],
                  "update": "[0, 0]"
                },
                {
                  "events": {"signal": "brush_translate_delta"},
                  "update": "clampRange(panLinear(brush_translate_anchor.extent_x, brush_translate_delta.x / span(brush_translate_anchor.extent_x)), 0, timeline_width)"
                },
                {
                  "events": {"signal": "brush_zoom_delta"},
                  "update": "clampRange(zoomLinear(brush_x, brush_zoom_anchor.x, brush_zoom_delta), 0, timeline_width)"
                }
              ]
            },
            {
              "name": "brush_year_date",
              "on": [
                {
                  "events": {"signal": "brush_x"},
                  "update": "brush_x[0] === brush_x[1] ? null : invert(\"x\", brush_x)"
                }
              ]
            },
            {
              "name": "brush_scale_trigger",
              "value": {},
              "on": [
                {
                  "events": [{"scale": "x"}],
                  "update": "(!isArray(brush_year_date) || (+invert(\"x\", brush_x)[0] === +brush_year_date[0] && +invert(\"x\", brush_x)[1] === +brush_year_date[1])) ? brush_scale_trigger : {}"
                }
              ]
            },
            {
              "name": "brush_tuple",
              "on": [
                {
                  "events": [{"signal": "brush_year_date"}],
                  "update": "brush_year_date ? {unit: \"layer_0\", fields: brush_tuple_fields, values: [brush_year_date]} : null"
                }
              ]
            },
            {
              "name": "brush_tuple_fields",
              "value": [{"field": "year_date", "channel": "x", "type": "R"}]
            },
            {
              "name": "brush_translate_anchor",
              "value": {},
              "on": [
                {
                  "events": [
                    {"source": "scope", "type": "mousedown", "markname": "brush_brush"}
                  ],
                  "update": "{x: x(unit), y: y(unit), extent_x: slice(brush_x)}"
                }
              ]
            },
            {
              "name": "brush_translate_delta",
              "value": {},
              "on": [
                {
                  "events": [
                    {
                      "source": "window",
                      "type": "mousemove",
                      "consume": true,
                      "between": [
                        {
                          "source": "scope",
                          "type": "mousedown",
                          "markname": "brush_brush"
                        },
                        {"source": "window", "type": "mouseup"}
                      ]
                    }
                  ],
                  "update": "{x: brush_translate_anchor.x - x(unit), y: brush_translate_anchor.y - y(unit)}"
                }
              ]
            },
            {
              "name": "brush_zoom_anchor",
              "on": [
                {
                  "events": [
                    {
                      "source": "scope",
                      "type": "wheel",
                      "consume": true,
                      "markname": "brush_brush"
                    }
                  ],
                  "update": "{x: x(unit), y: y(unit)}"
                }
              ]
            },
            {
              "name": "brush_zoom_delta",
              "on": [
                {
                  "events": [
                    {
                      "source": "scope",
                      "type": "wheel",
                      "consume": true,
                      "markname": "brush_brush"
                    }
                  ],
                  "force": true,
                  "update": "pow(1.001, event.deltaY * pow(16, event.deltaMode))"
                }
              ]
            },
            {
              "name": "brush_modify",
              "on": [
                {
                  "events": {"signal": "brush_tuple"},
                  "update": "modify(\"brush_store\", brush_tuple, true)"
                }
              ]
            }
          ],
          "marks": [
            {
              "name": "brush_brush_bg",
              "type": "rect",
              "clip": true,
              "encode": {
                "enter": {"fill": {"value": "#333"}, "fillOpacity": {"value": 0.125}},
                "update": {
                  "x": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "signal": "brush_x[0]"
                    },
                    {"value": 0}
                  ],
                  "y": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "value": 0
                    },
                    {"value": 0}
                  ],
                  "x2": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "signal": "brush_x[1]"
                    },
                    {"value": 0}
                  ],
                  "y2": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "field": {"group": "timeline_height"}
                    },
                    {"value": 0}
                  ]
                }
              }
            },
            {
              "name": "layer_0_marks",
              "type": "area",
              "style": ["area"],
              "sort": {"field": "datum[\"year_date\"]"},
              "interactive": true,
              "from": {"data": "data_1"},
              "encode": {
                "update": {
                  "tooltip": {
                    "signal": "{'Year': timeFormat(datum.year_date, '%Y'), 'sightings': datum.__count}"
                  },
                  "orient": {"value": "vertical"},
                  "fill": {"value": "lightgrey"},
                  "description": {
                    "signal": "\"date (year): \" + (timeFormat(datum[\"year_date\"], timeUnitSpecifier([\"year\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"}))) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
                  },
                  "x": {"scale": "x", "field": "year_date"},
                  "y": {"scale": "y", "field": "__count"},
                  "y2": {"scale": "y", "value": 0},
                  "defined": {
                    "signal": "isValid(datum[\"year_date\"]) && isFinite(+datum[\"year_date\"]) && isValid(datum[\"__count\"]) && isFinite(+datum[\"__count\"])"
                  }
                }
              }
            },
            {
              "name": "layer_1_marks",
              "type": "area",
              "style": ["area"],
              "sort": {"field": "datum[\"year_date\"]"},
              "interactive": false,
              "from": {"data": "data_0"},
              "encode": {
                "update": {
                  "orient": {"value": "vertical"},
                  "fill": {"value": "green"},
                  "description": {
                    "signal": "\"date (year): \" + (timeFormat(datum[\"year_date\"], timeUnitSpecifier([\"year\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"}))) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
                  },
                  "x": {"scale": "x", "field": "year_date"},
                  "y": {"scale": "y", "field": "__count"},
                  "y2": {"scale": "y", "value": 0},
                  "defined": {
                    "signal": "isValid(datum[\"year_date\"]) && isFinite(+datum[\"year_date\"]) && isValid(datum[\"__count\"]) && isFinite(+datum[\"__count\"])"
                  }
                }
              }
            },
            {
              "name": "brush_brush",
              "type": "rect",
              "clip": true,
              "encode": {
                "enter": {"fill": {"value": "transparent"}},
                "update": {
                  "x": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "signal": "brush_x[0]"
                    },
                    {"value": 0}
                  ],
                  "y": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "value": 0
                    },
                    {"value": 0}
                  ],
                  "x2": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "signal": "brush_x[1]"
                    },
                    {"value": 0}
                  ],
                  "y2": [
                    {
                      "test": "data(\"brush_store\").length && data(\"brush_store\")[0].unit === \"layer_0\"",
                      "field": {"group": "height"}
                    },
                    {"value": 0}
                  ],
                  "stroke": [
                    {"test": "brush_x[0] !== brush_x[1]", "value": "black"},
                    {"value": null}
                  ]
                }
              }
            }
          ],
          "scales": [
            {
              "name": "x",
              "type": "time",
              "domain": {
                "fields": [
                  {"data": "data_1", "field": "year_date"},
                  {"data": "data_0", "field": "year_date"}
                ]
              },
              "range": [0, {"signal": "timeline_width"}]
            },
            {
              "name": "y",
              "type": "linear",
              "domain": [0, 300],
              "range": [{"signal": "timeline_height"}, 0],
              "zero": true
            }
          ],
          "axes": [
            {
              "scale": "x",
              "orient": "bottom",
              "gridScale": "y",
              "grid": true,
              "tickCount": {"signal": "ceil(timeline_width/40)"},
              "domain": false,
              "labels": false,
              "aria": false,
              "maxExtent": 0,
              "minExtent": 0,
              "ticks": false,
              "zindex": 0
            },
            {
              "scale": "y",
              "orient": "left",
              "gridScale": "x",
              "grid": true,
              "tickCount": {"signal": "ceil(timeline_height/40)"},
              "domain": false,
              "labels": false,
              "aria": false,
              "maxExtent": 0,
              "minExtent": 0,
              "ticks": false,
              "zindex": 0
            },
            {
              "scale": "x",
              "orient": "bottom",
              "grid": false,
              "title": "date (year)",
              "format": {
                "signal": "timeUnitSpecifier([\"year\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"})"
              },
              "labelFlush": true,
              "labelOverlap": true,
              "tickCount": {"signal": "ceil(timeline_width/40)"},
              "zindex": 0
            },
            {
              "scale": "y",
              "orient": "left",
              "grid": false,
              "title": "Count of Records",
              "labelOverlap": true,
              "tickCount": {"signal": "ceil(timeline_height/40)"},
              "zindex": 0
            }
          ]
      },
      {
        "type": "group",
        "name": "monthly-graph",
        "style": "cell",
        "align": "right",
        "encode": {
          "update": {
            "x": {"value": 750},
            "y": {"value": 1},
            "width": {"signal": "monthly_width"},
            "height": {"signal": "monthly_height"}
          }
        },
        "title": {
          "text": "Monthly distribution of sightings",
          "frame": "group"
        }, 
        "data": [
            {"name": "highlight_store"},
            {"name": "select_store"},
            {
              "name": "source_0",
              "url": "https://raw.githubusercontent.com/dangerstone/bigfoot-sightings/data-wrangling/data/bfro_reports_geocoded.csv",
              "format": {"type": "csv", "parse": {"date": "date"}, "delimiter": ","},
              "transform": [
                {"type": "identifier", "as": "_vgsid_"},
                {
                  "field": "date",
                  "type": "timeunit",
                  "units": ["month"],
                  "as": ["month_date", "month_date_end"]
                },
                {
                  "type": "aggregate",
                  "groupby": ["month_date", "month_date_end"],
                  "ops": ["count"],
                  "fields": [null],
                  "as": ["__count"]
                },
                {"type": "identifier", "as": "_vgsid_"},
                {
                  "type": "filter",
                  "expr": "(isDate(datum[\"month_date\"]) || (isValid(datum[\"month_date\"]) && isFinite(+datum[\"month_date\"])))"
                }
              ]
            }
          ],
          "signals": [
            {
              "name": "unit",
              "value": {},
              "on": [
                {"events": "mousemove", "update": "isTuple(group()) ? group() : unit"}
              ]
            },
            {
              "name": "highlight",
              "update": "vlSelectionResolve(\"highlight_store\", \"union\", true, true)"
            },
            {
              "name": "select",
              "update": "vlSelectionResolve(\"select_store\", \"union\", true, true)"
            },
            {
              "name": "highlight_tuple",
              "on": [
                {
                  "events": [{"source": "scope", "type": "mouseover"}],
                  "update": "datum && item().mark.marktype !== 'group' ? {unit: \"\", fields: highlight_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
                  "force": true
                },
                {"events": [{"source": "view", "type": "dblclick"}], "update": "null"}
              ]
            },
            {
              "name": "highlight_tuple_fields",
              "value": [{"type": "E", "field": "_vgsid_"}]
            },
            {
              "name": "highlight_toggle",
              "value": false,
              "on": [
                {
                  "events": [{"source": "scope", "type": "mouseover"}],
                  "update": "event.shiftKey"
                },
                {"events": [{"source": "view", "type": "dblclick"}], "update": "false"}
              ]
            },
            {
              "name": "highlight_modify",
              "on": [
                {
                  "events": {"signal": "highlight_tuple"},
                  "update": "modify(\"highlight_store\", highlight_toggle ? null : highlight_tuple, highlight_toggle ? null : true, highlight_toggle ? highlight_tuple : null)"
                }
              ]
            },
            {
              "name": "select_tuple",
              "on": [
                {
                  "events": [{"source": "scope", "type": "click"}],
                  "update": "datum && item().mark.marktype !== 'group' ? {unit: \"\", fields: select_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
                  "force": true
                },
                {"events": [{"source": "view", "type": "dblclick"}], "update": "null"}
              ]
            },
            {
              "name": "select_tuple_fields",
              "value": [{"type": "E", "field": "_vgsid_"}]
            },
            {
              "name": "select_toggle",
              "value": false,
              "on": [
                {
                  "events": [{"source": "scope", "type": "click"}],
                  "update": "event.shiftKey"
                },
                {"events": [{"source": "view", "type": "dblclick"}], "update": "false"}
              ]
            },
            {
              "name": "select_modify",
              "on": [
                {
                  "events": {"signal": "select_tuple"},
                  "update": "modify(\"select_store\", select_toggle ? null : select_tuple, select_toggle ? null : true, select_toggle ? select_tuple : null)"
                }
              ]
            }
          ],
          "marks": [
            {
              "name": "marks",
              "type": "rect",
              "style": ["bar"],
              "interactive": true,
              "from": {"data": "source_0"},
              "encode": {
                "update": {
                  "fill": {"value": "darkgreen"},
                  "fillOpacity": [
                    {
                      "test": "!length(data(\"select_store\")) || vlSelectionTest(\"select_store\", datum)",
                      "value": 1
                    },
                    {"value": 0.3}
                  ],
                  "strokeWidth": [
                    {
                      "test": "length(data(\"select_store\")) && vlSelectionTest(\"select_store\", datum)",
                      "value": 2
                    },
                    {
                      "test": "length(data(\"highlight_store\")) && vlSelectionTest(\"highlight_store\", datum)",
                      "value": 1
                    },
                    {"value": 0}
                  ],
                  "ariaRoleDescription": {"value": "bar"},
                  "description": {
                    "signal": "\"date (month): \" + (timeFormat(datum[\"month_date\"], timeUnitSpecifier([\"month\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"}))) + \"; Count of Records: \" + (format(datum[\"__count\"], \"\"))"
                  },
                  "x2": {"scale": "x", "field": "month_date", "offset": 1},
                  "x": {"scale": "x", "field": "month_date_end"},
                  "y": {"scale": "y", "field": "__count"},
                  "y2": {"scale": "y", "value": 0}
                }
              }
            }
          ],
          "scales": [
            {
              "name": "x",
              "type": "time",
              "domain": {
                "data": "source_0",
                "fields": ["month_date", "month_date_end"]
              },
              "range": [0, {"signal": "monthly_width"}]
            },
            {
              "name": "y",
              "type": "linear",
              "domain": {"data": "source_0", "field": "__count"},
              "range": [{"signal": "monthly_height"}, 0],
              "nice": true,
              "zero": true
            }
          ],
          "axes": [
            {
              "scale": "x",
              "orient": "bottom",
              "gridScale": "y",
              "grid": true,
              "domain": false,
              "labels": false,
              "aria": false,
              "maxExtent": 0,
              "minExtent": 0,
              "ticks": false,
              "zindex": 0
            },
            {
              "scale": "y",
              "orient": "left",
              "gridScale": "x",
              "grid": true,
              "tickCount": {"signal": "ceil(monthly_height/40)"},
              "domain": false,
              "labels": false,
              "aria": false,
              "maxExtent": 0,
              "minExtent": 0,
              "ticks": false,
              "zindex": 0
            },
            {
              "scale": "x",
              "orient": "bottom",
              "grid": false,
              "title": "date (month)",
              "format": {
                "signal": "timeUnitSpecifier([\"month\"], {\"year-month\":\"%b %Y \",\"year-month-date\":\"%b %d, %Y \"})"
              },
              "labelFlush": true,
              "labelOverlap": true,
              "zindex": 0
            },
            {
              "scale": "y",
              "orient": "left",
              "grid": false,
              "title": "Count of Records",
              "labelOverlap": true,
              "tickCount": {"signal": "ceil(monthly_height/40)"},
              "zindex": 0
            }
          ]
      },
      {
        "type": "group",
        "name": "keywords-graph",
        "style": "cell",
        "align": "right",
        "encode": {
          "update": {
            "x": {"value": 750},
            "y": {"value": 300},
            "width": {"value": 300},
            "height": {"value": 250}
          }
        },
        "title": {
          "text": "Distribution of sightings based on select keywords",
          "frame": "group"
        }
      }
    ]
  }